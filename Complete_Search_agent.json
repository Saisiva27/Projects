{
  "name": "FULL search agent",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -420,
        -20
      ],
      "id": "b8bf3ae9-56e7-41b3-8263-c2ff55974b67",
      "name": "When chat message received",
      "webhookId": "02ee492c-132e-4000-b11d-6986b3add7cb"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<agent_instructions>\n\n  <system_role>\n    You are an AI assistant with tools for:\n    - Real-time data (SerpAPI)\n    - Date/time (JavaScript)\n    - Math (Calculator)\n    Use code blocks when using tools.\n  </system_role>\n\n  <tool_usage_priority>\n    <rank_1>JavaScript (Date/Time)</rank_1>\n    <rank_2>Calculator (Math)</rank_2>\n    <rank_3>SerpAPI (Live Info)</rank_3>\n    <rank_4>Knowledge Base (Static Info)</rank_4>\n  </tool_usage_priority>\n\n  <javascript_code_tool>\n    <tool_name>javascript_code_execution</tool_name>\n    <when_to_use>\n      For queries like: now, current time, today's date, what day is it.\n    </when_to_use>\n    <code_template><![CDATA[\n      const d = new Date().toLocaleString('en-IN', {\n        timeZone: 'Asia/Kolkata',\n        weekday: 'long', day: 'numeric', month: 'long',\n        year: 'numeric', hour: '2-digit',\n        minute: '2-digit', second: '2-digit', hour12: true\n      }) + ' IST';\n      return d;\n    ]]></code_template>\n  </javascript_code_tool>\n\n  <calculator_tool>\n    <tool_name>calculator</tool_name>\n    <when_to_use>\n      Use for math, %, equations, keywords like \"calculate\", \"solve\".\n    </when_to_use>\n  </calculator_tool>\n\n  <search_tool_usage>\n    <tool_name>serpapi_search</tool_name>\n    <when_to_search>\n      Use for news, weather, stocks, or real-time info.\n    </when_to_search>\n    <date_contextual_searches>\n      Get current date via JavaScript first if search depends on time.\n    </date_contextual_searches>\n    <important_notes>\n      Don't use for date/time or math alone. Cite sources.\n    </important_notes>\n  </search_tool_usage>\n\n  <response_guidelines>\n    <rule>Use the correct tool.</rule>\n    <rule>Use JS for date/time. Show natural output.</rule>\n    <rule>Use Calculator for math. Show operation and result.</rule>\n    <rule>Use Search for live data. Summarize with source.</rule>\n    <rule>Be clear, concise, use active voice.</rule>\n    <rule>Highlight key words using **bold**.</rule>\n  </response_guidelines>\n\n  <error_handling>\n    <rule>Say clearly if tool fails or info is limited.</rule>\n    <rule>Fallback to best available answer.</rule>\n  </error_handling>\n\n  <performance_optimization>\n    <rule>Prioritize JS → Calculator → Search.</rule>\n    <rule>Avoid extra tool use.</rule>\n  </performance_optimization>\n\n</agent_instructions>\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -180,
        -40
      ],
      "id": "fb400f20-1645-4afb-b58a-730550218c63",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -80,
        180
      ],
      "id": "f879e45e-c6e9-4ca1-aca3-e711b6a21557",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        60,
        180
      ],
      "id": "19d42e1e-0ae3-4e80-adb0-02dfceb75cc8",
      "name": "SerpAPI",
      "credentials": {
        "serpApi": {
          "id": "iMuEcspYV06fG0Km",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "description": "always execute this block. execute always \"ALWAYS\"",
        "jsCode": "// Get current date and time for India (IST) - Returns string output\nfunction getCurrentDateTime() {\n    // Get India time\n    const now = new Date();\n    const indiaTime = new Date(now.toLocaleString(\"en-US\", {timeZone: \"Asia/Kolkata\"}));\n    \n    // Format components\n    const dayName = indiaTime.toLocaleDateString('en-IN', { weekday: 'long' });\n    const day = indiaTime.getDate();\n    const month = indiaTime.getMonth() + 1; // This correctly adds 1 to get actual month\n    const year = indiaTime.getFullYear();\n    \n    const hours = indiaTime.getHours();\n    const minutes = indiaTime.getMinutes();\n    const seconds = indiaTime.getSeconds();\n    \n    // 12-hour format\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const hours12 = hours % 12 || 12;\n    const timeStr = `${hours12}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')} ${ampm}`;\n    \n    // Return formatted string - should show June (06) not October (10)\n    return `${dayName}, ${day}/${month}/${year} at ${timeStr} IST`;\n}\n\n// Execute and return the result as a string\nconst currentDateTime = getCurrentDateTime();\nconsole.log(currentDateTime);\n\n// Simple alternative - one line solution with clear month name\nconst quickDateTime = new Date().toLocaleString('en-IN', {\n    timeZone: 'Asia/Kolkata',\n    weekday: 'long',\n    day: 'numeric',\n    month: 'long',  // This will show \"June\" instead of \"06\"\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: true\n}) + ' IST';\n\nconsole.log(\"Current Date and Time:\", quickDateTime);\n\n// Return clear format with month name to avoid confusion\nreturn quickDateTime;"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        200,
        180
      ],
      "id": "854ffc7b-7c4b-4591-b037-858e363fd512",
      "name": "Code Tool"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        320,
        160
      ],
      "id": "244e713f-eccd-41d9-b3fb-30db14e29c33",
      "name": "Calculator"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -260,
        180
      ],
      "id": "8d319304-6521-44d2-b9aa-ef5083ed3180",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "ZY7dBVxu9NBK7sGv",
          "name": "n8n free OpenAI API credits"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "cd165919-3366-46bb-9eca-5c06da879740",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5ac966b211f1c01163f4ab6e2b40d7b5e7e3c1714a3f0cb9db16862c17a2330d"
  },
  "id": "FXZfrFNko4zljkta",
  "tags": []
}